# CORS preflight flag
map $request_method $is_options {
    default 0;
    "OPTIONS" 1;
}

# Read key and allow-list
map $http_x_api_key $api_key { 
    default $http_x_api_key; 
}

# Map: API key -> allowed flag
map $api_key $api_allowed {
    default 0;
    include /etc/nginx/config.d/api_keys.map;
}

#reate limit
limit_req_zone $api_key zone=per_key:10m rate=60r/m;

server {
    listen 80;
    server_name 192.168.1.114;
    client_max_body_size 32m;
    set $cors_allow_origin "*";

    location / {
        if ($is_options) {
            add_header Access-Control-Allow-Origin $cors_allow_origin always;
            add_header Access-Control-Allow-Headers X-API-Key,Content-Type always;
            add_header Access-Control-Allow-Methods GET,POST,OPTIONS always;
            return 204;
        }

        if ($api_allowed = 0) {
            add_header Access-Control-Allow-Origin $cors_allow_origin always;
            add_header Access-Control-Allow-Headers X-API-Key,Content-Type always;
            add_header Access-Control-Allow-Methods GET,POST,OPTIONS always;
            return 401;
        }

        limit_req zone=per_key burst=20 nodelay;

        proxy_pass http://127.0.0.1:11434;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_connect_timeout 300s;
        proxy_send_timeout    3600s;
        proxy_read_timeout    3600s;
        send_timeout          3600s;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header X-API-Key "";
        add_header Access-Control-Allow-Origin $cors_allow_origin always;
        add_header Access-Control-Allow-Headers X-API-Key,Content-Type always;
        add_header Access-Control-Allow-Methods GET,POST,OPTIONS always;
    }
}
